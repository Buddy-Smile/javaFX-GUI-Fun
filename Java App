import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.*;
import javafx.scene.paint.Color;
import javafx.geometry.Insets;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Random;
import java.io.IOException;
import javafx.stage.Stage;

public class CT3 extends Application {
    private TextArea text;
    private Color randomColor;
    private MenuItem menuItemColor;

    @Override
    public void start(Stage primaryStage) {
        randomColor = generateRandomColor();

        //Menu bar
        MenuBar menuBar = new MenuBar();

        Menu menu = new Menu("Options");

        // Menu Options
        MenuItem date = new MenuItem("Show Date and Time");
        MenuItem save = new MenuItem("Save to log.txt");
        menuItemColor = new MenuItem("Change Color");
        MenuItem menuItemExit = new MenuItem("Exit");

        date.setOnAction(e -> showDateTime());
        save.setOnAction(e -> saveTextToFile());
        menuItemColor.setOnAction(e -> changeBackgroundColor(primaryStage));
        menuItemExit.setOnAction(e -> System.exit(0));

        menu.getItems().addAll(date, save, menuItemColor, menuItemExit);

        menuBar.getMenus().add(menu);

        text = new TextArea();
        text.setWrapText(true);

        BorderPane root = new BorderPane();
        root.setTop(menuBar);
        root.setCenter(text);

        // Background color
        root.setBackground(new Background(new BackgroundFill(randomColor, CornerRadii.EMPTY, Insets.EMPTY)));

        // Scene
        Scene scene = new Scene(root, 400, 300);

        primaryStage.setScene(scene);
        primaryStage.setTitle("Menu");
        primaryStage.show();
    }

    private void showDateTime() {
        LocalDateTime now = LocalDateTime.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
        String formattedDateTime = now.format(formatter);

        text.setText(formattedDateTime);
    }

    private void saveTextToFile() {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter("log.txt"))) {
            writer.write(text.getText());
            // Catch statement for read and write error handling
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }

    private void changeBackgroundColor(Stage stage) {
    	// Random Color
        randomColor = generateRandomColor();

        // Different frame background color *I do not what else the frame background would be*
        BorderPane root = (BorderPane) stage.getScene().getRoot();
        root.setBackground(new Background(new BackgroundFill(randomColor, CornerRadii.EMPTY, Insets.EMPTY)));

        // Different background color
        text.setStyle("-fx-control-inner-background: #" + toHex(randomColor));
        
       // I decided to add a log to ensure we know ONLY green colors are generated 
        // I am color blind and a lot of the green hues were blending and I needed logged confirmation
        System.out.println("RGB: " + 
                (int)(randomColor.getRed() * 255) + ", " +
                (int)(randomColor.getGreen() * 255) + ", " +
                (int)(randomColor.getBlue() * 255));

        menuItemColor.setText("Change Background Color (" + toHex(randomColor) + ")");
    }

    private Color generateRandomColor() {
        Random random = new Random();
        int greenValue = random.nextInt(128) + 20; 
        return Color.rgb(0, greenValue, 0); 
    }

    // Hexadecimal conversion
    private String toHex(Color color) {
        return String.format("%02X%02X%02X",
                (int)(color.getRed() * 255),
                (int)(color.getGreen() * 255),
                (int)(color.getBlue() * 255));
    }

    public static void main(String[] args) {
        launch(args);
    }
}
